#include<stdio.h>
#include<string.h>
#include<ctype.h>
#include "set.h"
int n,type,sectype,defnumber,i, j, k, defnum;
char word[100],definition[100],eword[100][100];
int main()
{
	/*
	Different type explanations:
	1 -> Straight up insert, requires name, definiton and will also add 1 to first line to specify 1 definition.
	2 -> Splits into 2 cases: 1. Update a single definition.(Will be given as a parameter in the test cases)
	                          2. Clear the word definitions.
							  3. Add a new definition for the respective word.
	3 -> Delete a word
	4 -> Look-up a word and its definitions.
	*/
	FILE *fi = fopen("test","r");
	set_node *set;
	set_init(&set);
	fscanf(fi,"%d", &n);       // n represents the number of tests we're going to run through the program
	for (k = 1;k <= n;k++)
	{
		fscanf(fi, "%d", &type);   // The command type
		if (type == 1)             // Type 1 is for Inserting a word into the dictionary
		{		
			fscanf(fi, "%s", word);
			fgetc(fi);
			fgets(definition, 100, fi);
			if (!(set_search(set, word, strlen(word) + 1, strcmp)))         // First, we have to check if the word already exists and if it does, we ignore the Insert command.
			{
				set_insert(&set, word, strlen(word) + 1, strcmp);           // We insert the word in the set.
				FILE *f = fopen(word, "w");																	
				fprintf(f, "1\n");											// We will use the first line of the file to store the number of definitions our word has. In the insert case, we initialize it with 1.
				fprintf(f, "%s\n", definition);								// Add the definition as the second line in the file.
				fclose(f);
			}
		}
		else  
			if (type == 2)
			{
				fscanf(fi, "%d", &sectype);
				fgetc(fi);
				if (sectype == 1)
					fscanf(fi, "%d", &defnumber);
				fscanf(fi, "%s", word);
				fgetc(fi);
				fgets(definition, 100, fi);
				if (sectype == 1)
				{
					if (set_search(set, word, strlen(word) + 1, strcmp))
					{
						FILE *f = fopen(word, "r");
						fscanf(f, "%d", &defnum);
						fgetc(f);
						for (i = 0;i <= defnum-1;i++)
							fgets(eword[i], 100, f);
						strcpy(eword[defnumber-1], definition);
						fclose(f);
						FILE *g = fopen(word, "w");
						fprintf(g, "%d\n", defnum);
						for (i = 0;i <= defnum-1;i++)
						{
							for (j = 0;eword[i][j]!='\0';j++)
								fprintf(g, "%c", eword[i][j]);
							fprintf(g, "\n");
						}
						fclose(g);
					}
				}
				if (sectype == 2)
				{
					if (set_search(set, word, strlen(word) + 1, strcmp))
					{
						FILE *f = fopen(word, "w");
						fprintf(f, "0\n");
						fclose(f);
					}
				}
				if (sectype == 3)
				{
					if (set_search(set, word, strlen(word) + 1, strcmp))
					{
						FILE *f = fopen(word, "r");
						fscanf(f, "%d", &defnum);
						fgetc(f);
						for (i = 0;i <= defnum - 1;i++)
							fgets(eword[i], 100, f);
						defnum++;
						strcpy(eword[defnum-1], definition);
						fclose(f);
						FILE *g = fopen(word, "w");
						fprintf(g, "%d\n", defnum);
						for (i = 0;i <= defnum - 1;i++)
						{
							for (j = 0;eword[i][j] != '\0';j++)
								fprintf(g, "%c", eword[i][j]);
						}
						fprintf(g, "\n");
						fclose(g);
					}
				}
				
			}
			else
				if (type == 3)
				{

				}
				else
					if (type == 4)
					{

					}


	}
	return 0;
}
